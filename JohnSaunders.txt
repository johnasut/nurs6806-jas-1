bpython ~ IPython


cd C:\Box Sync\Fellowship\MS Biomedical Informatics\2020 Fall\Comp Sci Fundamentals - BMI 6017 (Nurs 6806)\myProject

***Type jupyter notebook in Anaconda Prompt after navigating to Box Sync or lower directory***

exerPythModPackTutorial

Fork & Clone this repository
We did this in a previous assignment. Instructions are here: https://github.com/cmcntsh/exerGitPractice
This can also be done directly in VSCode
Create a new folder on your machine where you want to put this repository if you don't already have one you want to use.
Copy the Clone or Download path for this repository from GitHub.
In VSCode from the command pallette (Ctrl-Shift-P) run Git: Clone
Paste the path into the path field which pops up
Select your new folder you created on your machine
A new folder for the repository with the repository files should be in the folder you selected showing in the Explorer window in VSCode on the left side.




 Open a terminal window and make sure it is in the directory of myProject.
 Run git add nameOfMyFile.fileExtension. (This tells git you want to track changes on that file and adds it to the staging area.)
 Run git status. (This will show what has changed in git.)
 Run git diff. (This shows what code has changed in the file.)
 Run git commit -m "The sentence I want associated with this commit message". (This prepares the changes to be pushed to GitHub and logs the message you specify.)
 Run git push origin master (Your code is now pushed to GitHub. Be sure to include origin master, as this tells GitHub which branch you want to push to, and creates the branch if it doesn't exist yet.)
 Go to your repository on GitHub and see your updates.

Run git checkout -b <BRANCH_NAME> to create a new branch



Push your updated file to your GitHub repository
This can be done in VSCode.
In VSCode click on the Source Control button.
You should see the files that had changes. (Mine has the original file which shows an M next to it and a new file which says checkpoint in the name. You really only need to push the original file, but if you push both it shouldn't hurt anything.)
Hover over the changed file. Click the + sign to stage the change.
Enter a commit message in the message field and click the checkmark to commit the change.
Click on the 3 dots for more actions and select Sync. This will push the updated file to your GitHub repository.
Submit the link to your GitHub repository on Canvas.




What is the purpose of having different environments?	(enter description or short answer here)
What is the default package manager in Python?	(enter description or short answer here)
How do you manage environments and packages in Anaconda?	(enter description or short answer here)
conda list	(enter description or short answer here)
conda env list	(enter description or short answer here)
How do you keep your base environment unchanged?	(enter description or short answer here)
What is the link to the Conda cheat sheet? (link in video notes is broken)	(enter description or short answer here)
conda create --name XXXX	(enter description or short answer here)
source activate XXXX	(enter description or short answer here)
conda install YYYY	(enter description or short answer here)
channels in Conda	(enter description or short answer here)
conda install -c ZZZZ YYYY	(enter description or short answer here)
conda config --show channels	(enter description or short answer here)
conda config --add channels ZZZZ	(enter description or short answer here)
conda-forge.org	(enter description or short answer here)
source deactivate	(enter description or short answer here)
conda config --get channels




from <package_name> import <modules_name>[, <module_name> ...]
from <package_name> import <module_name> as <alt_name>